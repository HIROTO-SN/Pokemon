{"ast":null,"code":"export const getAllPokemon = url => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      fetch(url).then(res => res.json()).then(data => resolve(data)).catch(reason => console.error(\"アクセス拒否：\", reason));\n    }, 1000);\n  });\n};\nexport const getPokemon = url => {\n  return new Promise((resolve, reject) => {\n    fetch(url).then(res => res.json()).then(data => resolve(data)).catch(reason => console.error(\"アクセス拒否：\", reason));\n  });\n};","map":{"version":3,"names":["getAllPokemon","url","Promise","resolve","reject","setTimeout","fetch","then","res","json","data","catch","reason","console","error","getPokemon"],"sources":["C:/Users/hirot/Desktop/react-3-apps/pokemon-app/src/utils/pokemon.js"],"sourcesContent":["export const getAllPokemon = (url) => {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      fetch(url)\r\n        .then((res) => res.json())\r\n        .then((data) => resolve(data))\r\n        .catch((reason) => console.error(\"アクセス拒否：\", reason))\r\n    }, 1000);\r\n  });\r\n};\r\n\r\nexport const getPokemon = (url) => {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then((data) => resolve(data))\r\n      .catch((reason) => console.error(\"アクセス拒否：\", reason))\r\n  });\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAIC,GAAG,IAAK;EACpC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtCC,UAAU,CAAC,MAAM;MACfC,KAAK,CAACL,GAAG,CAAC,CACPM,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKP,OAAO,CAACO,IAAI,CAAC,CAAC,CAC7BC,KAAK,CAAEC,MAAM,IAAKC,OAAO,CAACC,KAAK,CAAC,SAAS,EAAEF,MAAM,CAAC,CAAC;IACxD,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMG,UAAU,GAAId,GAAG,IAAK;EACjC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtCE,KAAK,CAACL,GAAG,CAAC,CACPM,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKP,OAAO,CAACO,IAAI,CAAC,CAAC,CAC7BC,KAAK,CAAEC,MAAM,IAAKC,OAAO,CAACC,KAAK,CAAC,SAAS,EAAEF,MAAM,CAAC,CAAC;EACxD,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}